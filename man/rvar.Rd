% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/rvar-.R
\name{rvar}
\alias{rvar}
\alias{new_rvar}
\title{Random variables of arbitrary dimension}
\usage{
new_rvar(x = double())

rvar(x = double(), dim = NULL)
}
\arguments{
\item{x}{A vector or array where the last dimension is draws from
a distribution. The resulting \link{rvar} will have dimension \code{dim(x)[-length(dim(x))]}; that is,
everything up to the last dimension is used for the shape of the variable, and the
last dimension is used to index draws from the distribution.}

\item{dim}{Override for the dimensions of the \link{rvar} to be created (see \code{\link[=dim]{dim()}}): an integer vector of length one
or more giving the maximal indices in each dimension. If \code{NULL} (the default), this is determined by the input.}
}
\value{
An object of class \code{"rvar"} representing a random variable.
}
\description{
Random variables backed by arrays of arbitrary dimension
}
\details{
The \code{"rvar"} class represents random variables as arrays of arbitrary
dimension, where the last dimension is used to index draws from the distribution.
\code{new_rvar()} is a low-level constructor; generally speaking you should use \code{rvar()}
in most code. To convert other objects to \code{rvar}s or to easily create constants,
use \code{\link[=as_rvar]{as_rvar()}}.
Most mathmetical operators and functions are supported, including efficient matrix
multiplication and vector and array-style indexing. The intent is that an \code{rvar}
works as closely as possible to how a base vector/matrix/array does.

For functions that expect base numeric arrays and for which \code{rvar}s cannot be
used directly as arguments, you can use \code{\link[=rfun]{rfun()}} or \code{\link[=rdo]{rdo()}} to translate your
code into code that executes across draws from one or more random variables
and returns a random variable as output. Typically \code{\link[=rdo]{rdo()}} offers the most
straightforward translation.

For faster operation than is possible with \code{\link[=rfun]{rfun()}} or \code{\link[=rdo]{rdo()}} (if those functions
are not sufficiently performant for your use case), you can also operate directly
on the underlying array using the \code{\link[=draws_of]{draws_of()}} function.
}
\seealso{
\code{\link[=as_rvar]{as_rvar()}} to convert objects to \code{rvar}s.
}
