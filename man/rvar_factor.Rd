% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/rvar-factor.R
\name{rvar_factor}
\alias{rvar_factor}
\alias{rvar_ordered}
\title{Factor random variables of arbitrary dimension}
\usage{
rvar_factor(x = factor(), ...)

rvar_ordered(x = ordered(NULL), ...)
}
\arguments{
\item{x}{(multiple options) The object to convert to an \code{rvar}:
\itemize{
\item A vector of draws from a distribution.
\item An array where the first dimension represents draws from a distribution.
The resulting \code{\link{rvar}} will have dimension \code{dim(x)[-1]}; that is,
everything except the first dimension is used for the shape of the
variable, and the first dimension is used to index draws from the
distribution (see \strong{Examples}). Optionally,
if \code{with_chains == TRUE}, the first dimension indexes the iteration and the
second dimension indexes the chain (see \code{with_chains}).
\item An \code{rvar}.
}}

\item{...}{
  Arguments passed on to \code{\link[=rvar]{rvar}}
  \describe{
    \item{\code{dim}}{(integer vector) One or more integers giving the maximal indices
in each dimension to override the dimensions of the \code{\link{rvar}} to be created
(see \code{\link[=dim]{dim()}}). If \code{NULL} (the default), \code{dim} is determined by the input.
\strong{NOTE:} This argument controls the dimensions of the \code{\link{rvar}}, not the
underlying array, so you cannot change the number of draws using this
argument.}
    \item{\code{dimnames}}{(list) Character vectors giving the names in each dimension
to override the names of the dimensions of the \code{\link{rvar}} to be created (see
\code{\link[=dimnames]{dimnames()}}). If \code{NULL} (the default), this is determined by the input.
\strong{NOTE:} This argument controls the names of the dimensions of the
\code{\link{rvar}}, not the underlying array.}
    \item{\code{nchains}}{(positive integer) The number of chains. The if \code{NULL} (the default),
\code{1} is used unless \code{x} is already an \code{\link{rvar}}, in which case the number of
chains it has is used.}
    \item{\code{with_chains}}{(logical) Does \code{x} include a dimension for chains?
If \code{FALSE} (the default), chains are not included, the first dimension of
the input array should index draws, and the \code{nchains} argument can be
used to determine the number of chains. If \code{TRUE}, the \code{nchains} argument
is ignored and the second dimension of \code{x} is used to index chains.
Internally, the array will be converted to a format without the chain index.
Ignored when \code{x} is already an \code{\link{rvar}}.}
  }}
}
\value{
An object of class \code{"rvar_factor"} representing a \code{factor}-like random variable.
}
\description{
Random variables backed by \link{factor}-like arrays of arbitrary dimension.
}
\details{
A subtype of \code{\link[=rvar]{rvar()}} that represents a (possibly multidimensional) sample of
a \link{factor} or an \link{ordered} factor. It is otherwise very similar to the basic \code{\link[=rvar]{rvar()}}:
it is backed by a multidimensional array with draws as the first dimension.
The primary difference is that the backing array has class \code{"factor"} (for \code{\link[=rvar_factor]{rvar_factor()}})
or \code{c("ordered", "factor")} (for \code{\link[=rvar_ordered]{rvar_ordered()}}). If you
pass a \link{factor} or \link{ordered} factor to \code{\link[=rvar]{rvar()}} it will automatically return
an object with the classes \code{"rvar_factor"} or \code{c("rvar_ordered", "rvar_factor")}.

See \code{\link[=rvar]{rvar()}} for more details on the internals of the random variable datatype.
}
\examples{

# TODO: update examples

set.seed(1234)

# To create a "scalar" `rvar_factor`, pass a one-dimensional array or a vector
# whose length (here `4000`) is the desired number of draws:
x <- rvar(sample(c("a","a","a","b","c"), 4000, replace = TRUE))
x

# Create random vectors by adding an additional dimension:
x_array <- array(c(
    sample(c("a","a","a","b","c"), 4000, replace = TRUE),
    sample(c("a","a","b","c","c"), 4000, replace = TRUE),
    sample(c("b","b","b","b","c"), 4000, replace = TRUE),
    sample(c("d","d","b","b","c"), 4000, replace = TRUE)
  ), dim = c(4000, 4))
rvar_factor(x_array)

# You can also create ordered factors
rvar_ordered(x_array)

# Unlike base factors, rvar factors can be matrices or arrays:
rvar_factor(x_array, dim = c(2, 2))

# If the input to rvar() is an array with a `"levels"` attribute, it
# will automatically be treated as an `rvar_factor()`:
y_array <- t(array(rbinom(3000, 1, c(0.1, 0.5, 0.9)) + 1, dim = c(3, 1000)))
rvar(y_array)
# with levels
attr(y_array, "levels") = c("a", "b")
rvar(y_array)

}
\seealso{
\code{\link[=as_rvar_factor]{as_rvar_factor()}} to convert objects to \code{rvar_factor}s. See \code{\link[=rdo]{rdo()}}, \code{\link[=rfun]{rfun()}}, and
\code{\link[=rvar_rng]{rvar_rng()}} for higher-level interfaces for creating \code{rvar}s.
}
