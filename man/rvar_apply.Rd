% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/rvar-apply.R
\name{rvar_apply}
\alias{rvar_apply}
\title{Random variable resulting from a function applied over margins of an array or random variable}
\usage{
rvar_apply(.x, .margin, .f, ...)
}
\arguments{
\item{.x}{An array or an \code{\link{rvar}}.}

\item{.margin}{A vector giving the subscripts which the function will be applied over.
E.g., for a matrix \code{1} indicates rows, \code{2} indicates columns, \code{c(1, 2)} indicates rows
and columns. If \code{.x} has named dimensions, this can be a character vector selecting
dimension names.}

\item{.f}{the function to be applied. This must be a function that returns an \code{\link{rvar}}.
The dimensions of the result of \code{.f} applied to each margin of \code{.x} must be the same as
each other, otherwise the resulting \code{\link{rvar}} cannot be simplified. See 'Details'.}

\item{...}{optional arguments to \code{.f}.}
}
\value{
An \code{\link{rvar}}.
}
\description{
Returns an \code{\link{rvar}} obtained by applying a function to margins of an array or \code{\link{rvar}}.
Acts like \code{apply()}, except that the function supplied (\code{.f}) should return an \code{\link{rvar}},
and the final result is always an \code{\link{rvar}}.
}
\details{
This function acts much like \code{apply()}, except that the function passed to it (\code{.f})
must return \code{\link{rvar}}s, and the result is simplified into an \code{\link{rvar}}.

If you wish to apply functions over \code{\link{rvar}}s where the result is not intended to
be simplified into an \code{\link{rvar}}, you can use the standard \code{apply()}, \code{lapply()},
\code{sapply()}, or \code{vapply()} functions.
}
\examples{

# To create a "scalar" `rvar`, pass a one-dimensional array or a vector
# whose length (here `4000`) is the desired number of draws:
x <- rvar(rnorm(4000, mean = 1, sd = 1))
x

# Create random vectors by adding an additional dimension:
n <- 4   # length of output vector
x <- rvar(array(rnorm(4000 * n, mean = rep(1:n, each = 4000), sd = 1), dim = c(4000, n)))
x

# Create a random matrix:
rows <- 4
cols <- 3
x <- rvar(array(rnorm(4000 * rows * cols, mean = 1, sd = 1), dim = c(4000, rows, cols)))
x

}
\seealso{
\code{\link[=as_rvar]{as_rvar()}} to convert objects to \code{rvar}s. See \code{\link[=rdo]{rdo()}}, \code{\link[=rfun]{rfun()}}, and
\code{\link[=rvar_rng]{rvar_rng()}} for higher-level interfaces for creating \code{rvar}s.
}
